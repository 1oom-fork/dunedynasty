01F7:0000:000C:3D76	emu_EntryPoint
01F7:016A:0001:6580	emu_Empty3	# Function does absolutely nothing
01F7:016B:0009:694B	emu_Exit	# (code)
01F7:017D:0006:2BD3	emu_Interrupt_Vector_Store	#
01F7:01C0:000A:F393	emu_Interrupt_Vector_Restore	#
01F7:0272:0007:7402	emu_Stderr_Write	# ()
01F7:027A:000E:2C9D	emu_Error_Abnormal_Termination	# ()
01F7:28DC:0009:EE56	emu_String_strncasecmp	# (string1_csip, string2_csip, n) Case insensitive compare up to n chars
01F7:02AC:000F:B26A	emu_Print_Error_Overlay	# ()
01F7:02C9:0001:6580	emu_Empty5	# Function does absolutely nothing
01F7:02F7:0007:3850	emu_Drive_Get_Default	# (drive_csip)
01F7:0309:000C:E723	emu_Drive_Set_Default	# (drive, num_drive_csip)
01F7:031F:0001:6580	emu_Empty4	# Function does absolutely nothing
01F7:0320:000D:74B7	emu_Terminate	# (error, ?, code)
01F7:0377:000D:81BB	emu_Terminate_Normal	# (code)
01F7:0386:0010:FC59	emu_Terminate_Error	# (code)
01F7:03B2:0017:7CBE	emu_Tools_MulCSIP_csip	# () dx:ax * cx:bx -> dx:ax
01F7:03C9:001C:11C7	emu_Tools_MemcopyCX	# (from_csip, to_csip) count in cx, no return
01F7:03E5:000F:055B	emu_Drive_Get_Curdir	# (drive, buffer_csip)
01F7:0402:0007:3E30	emu_Date_Get	# (result_csip)
01F7:0415:0007:3EF0	emu_Time_Get	# (result_csip)
01F7:0428:0010:87B4	emu_Drive_Get_Default_Wrapper	# ()
01F7:0442:0015:6A10	emu_Drive_Set_Default_Wrapper	# (drive)
01F7:0494:000D:EF57	emu_Drive_Get_Free_Space	# (drive, result_csip)
01F7:04BD:000A:984A	emu_Interrupt_Vector_Get	# (interrupt)
01F7:04CC:000E:D711	emu_Interrupt_Vector_Set	# (interrupt, pointer_csip)
01F7:04DD:0007:D823	emu_Tools_Divd_Wrapper	#
01F7:04E0:0004:E219	emu_Tools_Divd	# 32bit division type 0
01F7:04E7:0005:D2F2	emu_Tools_Divd2	# 32bit division type 1
01F7:058B:0018:D9CF	emu_Tools_Shld_Wrapper	# stupid wrapper
01F7:05ED:0013:E7F6	emu_Tools_AddCSIP_Wrapper	# stupid wrapper
01F7:05F0:0010:6415	emu_Tools_AddCSIP	# (dx:ax + cx:bx -> dx:ax, and makes dx as big as possible)
01F7:064D:0028:3537	emu_Tools_SubCSIP	# (dx:ax - cx:bx -> dx:ax, and makes ax as big as possible)
01F7:06C0:000B:9E93	emu_Device_Get_Info	# (file)
01F7:0773:001E:D7DA	emu_File_Seek	# (file, low, high, method)
01F7:079C:0017:78BE	emu_Tools_MulCSIP_ip	# () dx:ax * cx:bx -> dx:ax
01F7:07B3:0021:4ED6	emu_Tools_Cmpd	# cmp(dx:ax, cx:bx)
01F7:07D4:0011:370E	emu_Tools_Var79E4_Init	# (value)
01F7:07E5:0011:F68B	emu_Tools_Var79E4_Update # () variable_79E4 = 0x15A4E35 * variable_79E4 + 1, returns high word & 0x7FFF
01F7:080B:0016:8E7B	emu_File_Read	# (file, buffer_csip, buflen)
01F7:0EFB:0020:CAA8	emu_Tools_StoreSegments # (csip) stores es, cs, ss and ds in "array" at csip
01F7:1097:0010:64C2	emu_String_tolower	# (c)
01F7:10C3:0010:64C2	emu_String_toupper	# (c)
01F7:10EF:000B:AF8B	emu_File_Delete	# (filename_csip)
01F7:111F:001A:B513	emu_String_Format	# (params_ip, format_csip, data_csip, callback_ip) data_csip depends on callback
01F7:114F:001A:962D	emu_String_Format_Callback	# (params_ip, format_csip, data_csip, callback_ip) only data_csip and callback_ip are used, data_csip depends on callback
01F7:207A:0014:31F0	emu_File_IOCtrl	# (file, function, buffer_csip, buflen)
01F7:21DE:000D:9231	emu_Tools_Realloc	# (block, size)
01F7:2252:0045:03CB	emu_String_ToInteger	# (string_csip)
01F7:22E8:0011:1764	emu_File_GSAttr	# (filename_csip, type, attribute)
01F7:23CC:0013:6B52	emu_File_Close_Wrapper	# (file) Manages closing of a file
01F7:23F4:000A:3443	emu_File_Close	# (file)
01F7:28B8:0024:83C9	emu_Tools_Memcopy	# (to_csip, from_csip, count)
01F7:2923:0024:671B	emu_Tools_Memset_Internal	# (csip, count, value)
01F7:2947:0014:02B8	emu_Tools_Memset	# (csip, value, count)
01F7:29D9:000E:7642	emu_File_Create	# (attributes, filename_csip)
01F7:29F4:000E:B8B9	emu_File_Truncate	# (file)
01F7:2A06:002A:9A90	emu_File_Open_Wrapper	# (filename_csip, flags1, flags2) Manages opening (creation, truncation) of a file
01F7:2B75:002A:45D8	emu_File_Open	# (filename_csip, mode)
01F7:2BC4:0019:3608	emu_String_printf	# (format_csip, param1, ...)
01F7:2DA4:001B:CF3B	emu_String_Format_Callback_2D4A	# (data_csip, count, from_csip) Write 'count' bytes from 'from_csip' buffer to a file, data_csip points to file infos
01F7:3354:0003:62AB	emu_File_Read_Wrapper	# (file, buffer_csip, buflen) Manages reading of a file
01F7:374D:001D:AA1B	emu_String_Format_Callback_374D	# (data_csip, count, from_csip) Move 'count' bytes from 'from_csip' buffer to a buffer, data_csip points to buffer csip
01F7:378D:0020:0F64	emu_String_sprintf	# (buf_csip, format_csip, param1, ...)
01F7:37AF:001F:03E8	emu_String_sprintf_params	# (buf_csip, format_csip, params_ip)
01F7:384A:003F:AE43	emu_String_strcat	# (to_csip, from_csip)
01F7:3889:0033:4660	emu_String_strchr	# (csip, c)
01F7:38C6:0030:705A	emu_String_strcmp	# (string1_csip, string2_csip)
01F7:38F6:0029:8B99	emu_String_strcpy	# (to_csip, from_csip)
01F7:3964:0041:7552	emu_String_strcasecmp	# (string1_csip, string2_csip) Case insensitive compare
01F7:39A5:001F:1A5D	emu_String_strlen	# (string_csip)
01F7:39C4:0031:EE87	emu_String_strncpy	# (to_csip, from_csip, count)
01F7:3A8A:0018:E4EE	emu_String_strstr	# (string1_csip, string2_csip)
01F7:3CD5:000D:9D98	emu_String_strupr	# (csip)
01F7:42F4:0019:54E2	emu_File_Write_Wrapper	# (file, buffer_csip, buflen) Manages writing to a file
01F7:4445:0016:943B	emu_File_Write	# (file, buffer_csip, buflen)

0642:000C:001A:AF29	emu_GameLoop_Main	# Never ending-loop, started once at application-start, and loops for ever in-game
0642:0481:0010:36A4	emu_InGame_Numpad_Move  # When moving with numpad ingame
0642:0559:0027:3560	emu_GUI_PaletteAnimate	# Animate the palette. Only works for some colours or something
0642:075D:0011:C164	emu_String_GenerateFilename	# (string_csip) adds ".(ENG|FRE|...)" to the given string
0642:07BE:0058:A125	emu_Map_SelectNext	# Select next unit/structure on the screen
0642:0AD2:002A:8B98	emu_Sound_PlayDuneInit	# Play the DuneInit sound at startup

0C3A:0C5C:004D:2837	emu_Structure_IsValidBuildLocation	# (type, tile), Check if one can build a structure on a tile given
0C3A:076E:0027:991C	emu_Structure_ConnectWall	# (internal, tile), Connect surrounding walls
0C3A:092A:0013:A4A8	emu_Structure_UpdateMap	# (structure_csip), Update the map with the latest sprites to represent the structure
0C3A:25EC:0011:E453	emu_Structure_IsUpgradable	# Check if a structure can be upgraded

0EDB:0006:002F:CECA	emu_Script_General_DisplayText	# (script)

0F78:0285:001C:04DB	emu_Map_SetSelectionSize	# (layout) Set the selection size
0F78:02D5:0014:4ABC	emu_Map_SetSelection	# (layout) Select an object, show place object thingy, or something else
0F78:0435:000E:32E0	emu_Map_MoveDirection	# (direction) Move the map with 1 tile in the given direction

0FCB:000D:0019:5047	emu_String_Load	# (name_csip), Load a language file in the memory, which is used after that with GetString
0FCB:005F:001C:FDC4	emu_String_GetString	# (stringID), Gets a string based on a StringID

1423:02A5:002A:29F1	emu_Gameloop_LevelEnd	# Handles level ending (losing or winning)

15C2:000B:000E:6322	emu_Script_ClearInfo	# (info_csip)
15C2:00AC:0015:2FBF	emu_Script_LoadFromFile	# (filename_csip, info_csip, functions_csip, text_csip)

167E:02D8:000C:4C9F	emu_Tools_Index_GetStructureOrUnit	# (encoded), gets the structure or unit corresponding to the given encoded index

16BC:0001:0018:AE47	emu_Team_AddUnitToTeam	# (unit_csip), add unit to team
16BC:0044:0027:CB92	emu_Team_RemoveUnitFromTeam	# (unit_csip), remove unit from team

176C:23CC:000B:4119	emu_Script_Unit_RandomSoldier	# (script_csip) randomly generates a new soldier around currentUnit location

1A34:3312:0017:29E8	emu_Unit_FindStructure	# (unit_csip), finds structure to go to (harvester)
1A34:3491:0032:AFF8	emu_Structure_GetLinkedUnit # (structure_csip)
1A34:34D0:0032:E0A4	emu_Unit_GetLinkedStructure # (unit_csip)
1A34:364E:0012:61B3	emu_Unit_UntargetMe	# (unit_csip), everything targeting this unit will now lose target

217E:04F9:000E:346A	emu_Overlay_Load
217E:055F:0008:D2BC	emu_Overlay_LocateMemory
217E:05A9:001A:42B9	emu_Overlay_Load2
217E:0677:0009:9C4F	emu_Overlay_Activate
217E:0698:001E:EA6B	emu_Overlay_ReplaceWithJump
217E:073A:0003:5D1A	emu_Overlay_AddToLinkedList
217E:0758:0003:5D02	emu_Overlay_ReplaceReturnCSIP
217E:0764:0006:1247	emu_Overlay_ReplaceReturnCS
217E:07A6:000C:1B04	emu_Overlay_GetCodeSize
217E:07B2:0018:C2D5	emu_Overlay_GetTotalSize

261F:0008:0033:66ED	emu_Overlay_Interrupt

29A3:02DA:003B:81C9	emu_Mouse_InsideRegion
29A3:02BD:0018:A1B5	emu_Mouse_CallbackClear
29A3:0224:0009:AA5D	emu_Mouse_Init
29A3:0054:005C:47DC	emu_Mouse_EventHandler
29A3:00CD:0066:C700	emu_Mouse_HandleMovement
29A3:013F:002A:CFEE	emu_Mouse_CheckMovement
29A3:000C:0048:00FE	emu_Mouse_CheckButtons

29E8:0D47:0096:3777	emu_Input_Keyboard_EventHandler
29E8:0A4A:0040:5428	emu_Input_HandleInput
29E8:0643:0008:ED98	emu_Input_Keyboard_NextKey
29E8:0484:002B:0A28	emu_Input_Keyboard_Translate
29E8:0479:0009:A77A	emu_Input_Keyboard_HandleKeys2
29E8:026C:0015:3543	emu_Input_Keyboard_HandleKeys
29E8:073F:000E:6816	emu_Input_History_Clear
29E8:0A19:002A:2DE6	emu_Input_History_Add
29E8:04EB:0011:9CC8	emu_Input_Flags_ClearBits
29E8:04AF:003C:ECA0	emu_Input_Flags_SetBits

2BB4:0004:0027:DC1D	emu_Tools_Random_256	# (), returns a random value between 0 and 255

2BD1:0004:0001:6580	emu_Empty1	# Function does absolutely nothing
2BD1:0005:0001:6580	emu_Empty2	# Function does absolutely nothing

2B0E:00D0:0022:EC76	emu_Tools_GetSmallestIP	# Move as much of the IP to CS

2BC0:0004:000F:950B	emu_Tools_Swapd	# LE <-> BE for 32bit values
2BC0:0013:000A:39BD	emu_Tools_Swapw	# LE <-> BE for 16bit values

B4B1:0373:001A:90A2	emu_Save_Chunk	# Save a chunk to the file

B4B8:16D3:0022:3C6A	emu_Gameloop_IntroMenu	# The intro and first menu main loop

B4BE:0000:000C:E7F4	emu_Gameloop_Intro	# Runs the intro

B4C1:0129:0028:FB8E	emu_Math_PercentToValue	# Makes a value between 0 and 255 to the max-value given
B4C1:0155:002A:AC43	emu_Math_ValueToPercent	# Makes two values in a percent between 0 and 255

B4C4:0000:001C:B22A	emu_Load	# Loads a savegame, or at least some subroutine of the loading processes

B4CD:07F4:0013:6862	emu_Structure_RemoveFogAroundTile # (posx, posy, radius)

B4DA:1099:0024:C93B	emu_Security_Main	# 157C checks for correct/wrong

B4F2:04B7:0015:5960	emu_GUI_SaveLoad_List	# Shows the Savegame list for loading or saving
B4F2:06AE:0035:32F1	emu_GUI_Save_AskName	# Shows the edit box to give the name of the savegame

B4FC:0000:0018:E5DC	emu_Ini_GetInteger
B4FC:03C8:002C:9251	emu_Ini_GetString

B503:0000:0016:B170	emu_GUI_ShowMap	# Shows the map and lets you select next mission

B50B:0326:0016:CD5C	emu_Save_House	# Save all houses to a buffer
B50B:0394:001F:01AF	emu_Save_Unit	# Save all units to a buffer
B50B:041C:001E:0374	emu_Save_Structure	# Save all structures to a buffer
B50B:04A1:001A:1AA9	emu_Save_Team	# Save all teams to a buffer

B511:0729:0016:F168	emu_Save_Main	# Save a game

B518:0000:0025:FC16	emu_GUI_ShowEndStats	# Show the stats at the end of the game

B527:0000:0016:BBD9	emu_GUI_EditBox	# Handle a complete editbox
